worker_processes  1;
env REDIS_HOST;
error_log logs/error.log;
events {
    worker_connections 1024;
}
http {
    init_by_lua_block {
        local redis = require "resty.redis";
    }

    resolver 127.0.0.11;
    server {
        listen 80;
        location ~ ^/redis/(?<path>[a-zA-Z]+) {
            set $target '';
            add_header X-path "$path" always;
            access_by_lua '
                local path = ngx.var.path;
                if not path then
                    ngx.log(ngx.ERR, "no path entered")
                    return ngx.exit(400)
                end
                local redis = require "resty.redis"
                local red = redis:new()
                red:set_timeout(1000)
                local ok, err = red:connect(os.getenv("REDIS_HOST"), 6379)
                if not ok then
                    ngx.log(ngx.ERR, "Could not connect to redis: ", err)
                    return ngx.exit(500)
                end
                local host, err = red:get(path)
                if not host then
                    ngx.log(ngx.ERR, "Failed to get host for path: ", path)
                    return ngx.exit(404)
                end
                if host == ngx.null then
                    ngx.log(ngx.ERR, "Host entry is missing for path: ", path)
                    return ngx.exit(404)
                end
                ngx.var.target = host
            ';
            proxy_pass http://$target;
        }
    }
}